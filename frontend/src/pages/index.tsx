import { useQuery } from "@tanstack/react-query";
import axios from "axios";
import Head from "next/head";
import { useState } from "react";

export default function Home() {
  const [news, setNews] = useState("");
  const [isLoading, setIsloading] = useState<boolean>(false);
  const [score, setScore] = useState<number>(0);

  const fetchPrediction = async () => {
    try {
      setIsloading(true);
      if (news.length > 0) {
        const { data } = await axios.get(
          `http://localhost:5000/predict?q=${news}`
        );
        console.log(data);
        setScore(data.score);
        return;
      }
      setScore(0);
    } catch (err) {
      console.log(err);
      alert("Error occured");
    } finally {
      setIsloading(false);
    }
  };

  console.log({ score });

  return (
    <>
      <Head>
        <title>Financial sentiment</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className="mx-20 my-40 flex flex-col justify-center items-center">
        <h1 className="text-4xl font-bold mb-2">
          Financial Sentiment Analyser
        </h1>
        <p className="text-xl font-light mb-5 flex flex-wrap items-center justify-center">
          Enter financial news and let us predict the sentiment of your data.
        </p>
        <textarea
          className="textarea textarea-bordered w-[500px] mt-5"
          rows={5}
          placeholder="Your financial news here"
          onChange={(e) => {
            setNews(e.target.value);
          }}
        ></textarea>
        <span className="flex flex-row space-x-3 mt-4 items-center">
          <button
            className="btn btn-info"
            onClick={fetchPrediction}
            disabled={isLoading}
          >
            {isLoading ? "Loading..." : "Predict using Naive bayes model"}
          </button>
        </span>
        <p className="p-5 text-5xl">
          {score > 1 && "😃"}
          {score < 0 && "☹️"}
          {score === 0 && "😶"}
        </p>
      </main>
    </>
  );
}
